on: [push, pull_request]

name: CI

jobs:
  # Run bitar tests.
  bitar:
    name: "bitar tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - 1.70.0

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: build
        run: cargo build -p bitar --verbose

      - name: test
        run: cargo test -p bitar --verbose --features compress

      - name: bita lzma/zstd compression tests
        run: cargo test -p bitar --verbose --features lzma-compression,zstd-compression,compress

  # Run bita tests.
  bita:
    name: "bita tests"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust:
          - stable
          - nightly
          - 1.70.0

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: build
        run: cargo build

      - name: test
        run: cargo test --verbose

      - name: bita lzma/zstd compression tests
        run: cargo test --verbose --features lzma-compression,zstd-compression

  # Verify that bita with rustls doesn't link to libssl.
  no-ssl:
    name: "bita+rustls"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - name: Verify build without libssl
        run: ./scripts/test-no-ssl-build.sh

  # Run formatting check on workspace.
  fmt:
    name: formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.70.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  # Run clippy on workspace.
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.70.0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy

      - name: Check lints
        run: cargo clippy --all -- -D warnings -A clippy::cognitive-complexity
